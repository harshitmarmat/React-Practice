{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/hooks/use-http.js","components/lib/api.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuote.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","activeClassName","active","to","Layout","props","main","children","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuoteItem","item","text","author","QuoteList","history","useHistory","location","useLocation","queryParam","URLSearchParams","search","console","log","get","quotes","ascending","isAscending","sortedQuote","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuote","loadedData","useEffect","length","Card","card","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","trim","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","url","exact","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6ef23b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__Bh_vx\",\"logo\":\"MainNavigation_logo__Lrek4\",\"nav\":\"MainNavigation_nav__3xMd5\",\"active\":\"MainNavigation_active__4IAqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1mVF_\",\"loading\":\"QuoteForm_loading__1GTWm\",\"control\":\"QuoteForm_control__a6dm7\",\"actions\":\"QuoteForm_actions__2xv5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__gkKtQ\",\"loading\":\"NewCommentForm_loading__3Inhc\",\"control\":\"NewCommentForm_control__9CQgG\",\"actions\":\"NewCommentForm_actions__2DULk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1iJcF\",\"sorting\":\"QuoteList_sorting__2TE3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__axzls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2TM7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1N9f7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2K1IP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__17dPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3hWvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__BgxpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1u4Uj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__7OK1K\"};","import { Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from './MainNavigation.module.css'\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <Fragment>\r\n            <header className={classes.header}>\r\n                <div className={classes.logo}>Great Quotes</div>\r\n                <nav className={classes.nav}>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink activeClassName={classes.active} to='/quotes'>\r\n                                All Quotes\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName={classes.active} to='/new-quote'>\r\n                                Add Quote\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default MainNavigation;","import { Fragment } from \"react\"\r\nimport MainNavigation from \"./MainNavigation\"\r\nimport classes from \"./Layout.module.css\"\r\n\r\nconst Layout = (props) => {\r\n    return(\r\n        <Fragment>\r\n            <MainNavigation/>\r\n            <main className={classes.main}>\r\n                {props.children}\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quote-9c3f1-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn' >\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  \n  const queryParam = new URLSearchParams(location.search);\n  console.log(queryParam.get('sort'));\n\n  const isAscending = queryParam.get('sort')==='asc';\n\n  const sortedQuote = sortQuotes(props.quotes,isAscending);\n\n  const sortHandler = () => {\n    history.push({\n      pathname : location.pathname,\n      search : 'sort=' + (isAscending?'dsc':'asc')\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortHandler}>Sort {isAscending?'Ascending' : 'Descending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuote.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getAllQuotes } from \"../components/lib/api\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\nconst AllQuote = () => {\r\n    const {sendRequest , status,error , data : loadedData} = useHttp(getAllQuotes,true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest();\r\n    },[sendRequest]);\r\n\r\n    if(status==='pending'){\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n    if(error){\r\n        return<p className=\"centered focused\">{error}</p>\r\n    }\r\n\r\n    if(status==='completed' && (!loadedData|| loadedData.length===0)){\r\n        return<NoQuotesFound />\r\n    }\r\n\r\n    return (\r\n        <QuoteList quotes={loadedData} />\r\n    )\r\n}\r\n\r\nexport default AllQuote;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering , setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    \n    if(enteredAuthor.length.trim===0 || enteredText.length.trim===0){\n      return;\n    }\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = ()=> {\n    setIsEntering(true);\n    console.log('hi');\n    return;\n  }\n\n  const finishEnteringHandler = () =>{\n    if(authorInputRef.current.value.length.trim===0 || textInputRef.current.value.length.trim===0){\n      return;\n    }\n\n      setIsEntering(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=>'Are you sure you want to leave? All your data will lost!'}/>\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { addQuote } from \"../components/lib/api\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\n\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n    const {sendRequest , status} = useHttp(addQuote);\r\n    \r\n    useEffect(()=>{\r\n        if(status==='completed'){\r\n            history.push('/quotes');\r\n        }\r\n    },[status,history]);\r\n    \r\n    const newQuoteHandler = (quoteData) =>{\r\n        // console.log(quoteData);\r\n        sendRequest(quoteData);\r\n    }\r\n\r\n    return (\r\n        <QuoteForm isLoading={status==='pending'} onAddQuote={newQuoteHandler}/>\r\n    )\r\n\r\n}\r\n\r\nexport default NewQuote;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef,useEffect } from 'react';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport LoadingSpinner from \"../UI/LoadingSpinner\"\n\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest,status , error} = useHttp(addComment);\n  const {id, onAddedComment} = props;\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    \n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData : {text : enteredText}, quoteId : id});\n  };\n\n  useEffect(()=>{\n    if(status==='completed' && !error){\n      onAddedComment();\n    }\n  },[status,error,onAddedComment])\n  \n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status==='pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useHttp from '../hooks/use-http';\nimport { getAllComments } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const param = useParams();\n  const { quoteId } = param;\n  const {sendRequest , status , data : loadedComments} = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(()=>{\n    sendRequest(quoteId);\n  },[sendRequest,quoteId]);\n\n  \n  const addedCommentHandler = useCallback(()=>{\n    sendRequest(quoteId);\n  },[sendRequest,quoteId]);\n  \n\n  let comment;\n  if(status==='pending'){\n    comment = <div className='centered'>\n      <LoadingSpinner/>\n    </div>\n  }\n  if(status==='completed' && (loadedComments || loadedComments.length>0)){\n    comment = <CommentsList  comments={loadedComments}/>\n  }\n  if(status==='completed' && (!loadedComments || loadedComments.length===0)){\n    comment =  <p>No comments were added yet</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm id={quoteId} onAddedComment ={addedCommentHandler} />}\n      {comment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams ,useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\"\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getSingleQuote } from \"../components/lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const param = useParams();\r\n    const {quoteId} = param; \r\n    const {sendRequest , status , error , data: loadedData} = useHttp(getSingleQuote,true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest(quoteId);\r\n    },[sendRequest,quoteId]);\r\n\r\n    if(status==='pending'){\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n    if(error){\r\n        return<p className=\"centered focused\">{error}</p>\r\n    }\r\n\r\n\r\n    if(!loadedData.text){\r\n        return (<p>No quote found!</p>)\r\n    }\r\n    console.log(match);\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={loadedData.text} author = {loadedData.author} />\r\n            <Route path={match.url} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`${match.url}/comment`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comment`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default QuoteDetail;","const NotFound = () => {\r\n    return (\r\n        <div className=\"centered\">\r\n            <p>Page Not Found</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuote from \"./pages/AllQuote\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NotFound from \"./pages/NotFound\"\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes'  exact>\n          <AllQuote/>\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetail/>\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote/>\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}